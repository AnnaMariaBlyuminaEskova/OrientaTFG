// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrientaTFG.Shared.Infrastructure.DBContext;

#nullable disable

namespace OrientaTFG.Shared.Infrastructure.Migrations
{
    [DbContext(typeof(OrientaTFGContext))]
    partial class OrientaTFGContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.Administrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ProfilePictureName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Administrator", "User");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Files")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MainTaskId")
                        .HasColumnType("int");

                    b.Property<int?>("SubTaskId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MainTaskId");

                    b.HasIndex("SubTaskId");

                    b.ToTable("Comments", "TFG");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Departments", "Master");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.MainTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("MaximumPoints")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ObtainedPoints")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TFGId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("TFGId");

                    b.ToTable("MainTasks", "TFG");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.MainTaskStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MainTaskStatus", "Master");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TFGId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TFGId");

                    b.ToTable("Messages", "TFG");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ProfilePictureName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Students", "User");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.StudentAlertConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AlertEmail")
                        .HasColumnType("bit");

                    b.Property<int>("AnticipationDaysForFewerThanTotalTaskHoursTasks")
                        .HasColumnType("int");

                    b.Property<int>("AnticipationDaysForMoreThanTotalTaskHoursTasks")
                        .HasColumnType("int");

                    b.Property<bool>("CalificationEmail")
                        .HasColumnType("bit");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TotalTaskHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("StudentsAlertConfigurations", "User");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.SubTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EstimatedHours")
                        .HasColumnType("int");

                    b.Property<int>("MainTaskId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MainTaskId");

                    b.HasIndex("StatusId");

                    b.ToTable("SubTasks", "TFG");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.SubTaskStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SubTaskStatus", "Master");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.TFG", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TutorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("TutorId");

                    b.ToTable("TFG", "TFG");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.Tutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ProfilePictureName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Tutors", "User");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.Comment", b =>
                {
                    b.HasOne("OrientaTFG.Shared.Infrastructure.Model.MainTask", "MainTask")
                        .WithMany("Comments")
                        .HasForeignKey("MainTaskId");

                    b.HasOne("OrientaTFG.Shared.Infrastructure.Model.SubTask", "SubTask")
                        .WithMany("Comments")
                        .HasForeignKey("SubTaskId");

                    b.Navigation("MainTask");

                    b.Navigation("SubTask");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.MainTask", b =>
                {
                    b.HasOne("OrientaTFG.Shared.Infrastructure.Model.MainTaskStatus", "MainTaskStatus")
                        .WithMany("MainTasks")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrientaTFG.Shared.Infrastructure.Model.TFG", "TFG")
                        .WithMany("MainTasks")
                        .HasForeignKey("TFGId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainTaskStatus");

                    b.Navigation("TFG");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.Message", b =>
                {
                    b.HasOne("OrientaTFG.Shared.Infrastructure.Model.TFG", "TFG")
                        .WithMany("Messages")
                        .HasForeignKey("TFGId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TFG");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.StudentAlertConfiguration", b =>
                {
                    b.HasOne("OrientaTFG.Shared.Infrastructure.Model.Student", "Student")
                        .WithOne("AlertConfiguration")
                        .HasForeignKey("OrientaTFG.Shared.Infrastructure.Model.StudentAlertConfiguration", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.SubTask", b =>
                {
                    b.HasOne("OrientaTFG.Shared.Infrastructure.Model.MainTask", "MainTask")
                        .WithMany("SubTasks")
                        .HasForeignKey("MainTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrientaTFG.Shared.Infrastructure.Model.SubTaskStatus", "SubTaskStatus")
                        .WithMany("SubTasks")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainTask");

                    b.Navigation("SubTaskStatus");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.TFG", b =>
                {
                    b.HasOne("OrientaTFG.Shared.Infrastructure.Model.Student", "Student")
                        .WithOne("TFG")
                        .HasForeignKey("OrientaTFG.Shared.Infrastructure.Model.TFG", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrientaTFG.Shared.Infrastructure.Model.Tutor", "Tutor")
                        .WithMany("TFGs")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.Tutor", b =>
                {
                    b.HasOne("OrientaTFG.Shared.Infrastructure.Model.Department", "Department")
                        .WithMany("Tutors")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.Department", b =>
                {
                    b.Navigation("Tutors");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.MainTask", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("SubTasks");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.MainTaskStatus", b =>
                {
                    b.Navigation("MainTasks");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.Student", b =>
                {
                    b.Navigation("AlertConfiguration")
                        .IsRequired();

                    b.Navigation("TFG");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.SubTask", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.SubTaskStatus", b =>
                {
                    b.Navigation("SubTasks");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.TFG", b =>
                {
                    b.Navigation("MainTasks");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("OrientaTFG.Shared.Infrastructure.Model.Tutor", b =>
                {
                    b.Navigation("TFGs");
                });
#pragma warning restore 612, 618
        }
    }
}
